@page "/validationtest"
@using System.ComponentModel.DataAnnotations
@using BlazorApp.Components.Data
@rendermode InteractiveServer
<h3>입력 유효성 자동 검사 및 팝업</h3>

@foreach (var item in _testList)
{
    <p>@item.Date.ToString("yyyy-MM-dd")</p>
    <p>@item.TemperatureC</p>
    <p>@item.Summary</p>
}

<button class="btn btn-primary" @onclick="AddNew">Add New</button>

@if (_showPopup)
{
    <div class="modal" style="display:block" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h3>데이터 추가하기 팝업</h3>
                    <button type="button" class="close" @onclick="ClosePopup">
                        <span area-hidden="true">X</span>
                    </button>
                </div>
                <div class="modal-body">
                    <EditForm Model="_newTestData" OnValidSubmit="Save">
                        @* Form Validatoin 기능 On *@
                        <DataAnnotationsValidator/>
                        
                        @* 에러 있으면 메시지 상세 출력 *@
                        <ValidationSummary/>
                        
                        <label for="TemperatureC">TemperatureC</label>
                        <InputNumber class="form-control" placeholder="TemperatureC" @bind-Value="_newTestData.TemperatureC"/>
                        
                        <label for="Summary">Summary</label>
                        <InputText class="form-control" placeholder="Summary" @bind-Value="_newTestData.Summary"/>
                        <br/>
                        
                        <button class="btn btn-primary" type="submit">Save</button>
                    </EditForm>

                </div>
            </div>
        </div>
    </div>
}


@code {
    
    bool _showPopup = false;

    public TestClass _newTestData;
    private List<TestClass> _testList = new List<TestClass>();

    private void AddNew()
    {
        _showPopup = true;
        _newTestData = new TestClass();
    }

    void ClosePopup()
    {
        _showPopup = false;
    }

    void Save()
    {
        _showPopup = false;
        _testList.Add(_newTestData);
        StateHasChanged();
    }

}